/*=========================================
 C++ class definitions exported from AngelScript.
 This is automatically generated by the tools.
 DO NOT modify this manually! Edit the corresponding .as files instead!
 BSOD-Games, All Rights Reserved.
==========================================*/

#pragma once

#include <angelscript.h>
#include "Scripts/ScriptVar.h"
#include "Scripts/ScriptObject.h"

// ----------------------------------
// TYPEDEFS
// ----------------------------------

// ----------------------------------
// ENUMS
// ----------------------------------

// ----------------------------------
// CLASSES
// ----------------------------------

class OTBGameInfo : public OGameInfo
{
	DECLARE_CLASS( OTBGameInfo, OGameInfo )

	//## BEGIN PROPS OTBGameInfo
	//## END PROPS OTBGameInfo

public:
	OTBGameInfo() : OGameInfo( ScriptObject::NoInit )
	{
		asIScriptEngine*		scriptEngine = GScriptEngine->GetASScriptEngine();
		asIScriptModule*		scriptModule = scriptEngine->GetModule( "TestbedGame" );
		asIScriptContext*		scriptContext = scriptEngine->CreateContext();
		check( scriptContext && scriptModule );

		asITypeInfo*			objectType = scriptModule->GetObjectTypeByIndex( 1 );
		check( objectType );

		asIScriptFunction*		factory = objectType->GetFactoryByIndex( 0 );
		check( factory );

		int32					result = scriptContext->Prepare( factory );
		check( result >= 0 );

		result = scriptContext->Execute();
		check( result >= 0 );

		Init( *( asIScriptObject** )scriptContext->GetAddressOfReturnValue() );
	}

	OTBGameInfo( class asIScriptObject* InScriptObject ) : OGameInfo( ScriptObject::NoInit ) { Init( InScriptObject ); }
	OTBGameInfo( ENoInit ) : OGameInfo( ScriptObject::NoInit ) {}

	FORCEINLINE OTBGameInfo& operator=( const OTBGameInfo& InCopy )
	{
		asIScriptObject*		scriptObject = ScriptObject::StasticASCreateCopy( InCopy.self );
		check( scriptObject );

		Init( scriptObject );
		return *this;
	}

	void execSetGameMode( EGameMode Param0 )
	{
		asIScriptEngine*		scriptEngine = GScriptEngine->GetASScriptEngine();
		asIScriptContext*		scriptContext = scriptEngine->CreateContext();
		check( scriptContext );
	
		asIScriptFunction*		function = typeInfo->GetMethodByIndex( 2 );
		check( function );
	
		int32	result = scriptContext->Prepare( function );
		check( result >= 0 );
	
		result = scriptContext->SetObject( self );
		check( result >= 0 );
	
		scriptContext->SetArgDWord( 0, Param0 );
	
		result = scriptContext->Execute();
		check( result >= 0 );
		scriptContext->Release();
	}

protected:
	void Init( asIScriptObject* InScriptObject ) override
	{
		Super::Init( InScriptObject );
	}
};

// ----------------------------------
// FUNCTIONS
// ----------------------------------

void execGameExec3( OTBGameInfo*& OutTest )
{
	asIScriptEngine*		scriptEngine = GScriptEngine->GetASScriptEngine();
	asIScriptContext*		scriptContext = scriptEngine->CreateContext();
	check( scriptContext );

	asIScriptFunction*		function = scriptEngine->GetModule( "TestbedGame" )->GetFunctionByIndex( 0 );
	check( function );

	int32	result = scriptContext->Prepare( function );
	check( result >= 0 );

	scriptContext->SetArgAddress( 0, OutTest->GetHandle() );

	result = scriptContext->Execute();
	check( result >= 0 );
	scriptContext->Release();
}

int32 execGameInit()
{
	asIScriptEngine*		scriptEngine = GScriptEngine->GetASScriptEngine();
	asIScriptContext*		scriptContext = scriptEngine->CreateContext();
	check( scriptContext );

	asIScriptFunction*		function = scriptEngine->GetModule( "TestbedGame" )->GetFunctionByIndex( 1 );
	check( function );

	int32	result = scriptContext->Prepare( function );
	check( result >= 0 );

	result = scriptContext->Execute();
	check( result >= 0 );

	int32		returnValue = scriptContext->GetReturnDWord();
	scriptContext->Release();
	return returnValue;
}

// ----------------------------------
// GLOBAL VALUES
// ----------------------------------

// ----------------------------------
// INITIALIZATION MACROS
// ----------------------------------

#define DECLARATE_GLOBALVALUES_SCRIPTMODULE_TestbedGame

// ----------------------------------
// INITIALIZATION FUNCTION
// ----------------------------------

void InitScriptModule_TestbedGame()
{
}